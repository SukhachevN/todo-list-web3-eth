/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TodoPrice, TodoPriceInterface } from "../../contracts/TodoPrice";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setAiImageTryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "setCompleteTodoReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "setCreateTodoReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setMintAiImageNFTPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052603260015560646002556103e86003556101f460045534801561002657600080fd5b5061003033610035565b610085565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610328806100946000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b2578063a78748c1146100d1578063dd02bfbd146100e4578063f2fde38b146100f757600080fd5b80633bf2a529146100825780636685b99a14610097578063715018a6146100aa575b600080fd5b6100956100903660046102a9565b61010a565b005b6100956100a53660046102a9565b610117565b610095610124565b600054604080516001600160a01b039092168252519081900360200190f35b6100956100df3660046102a9565b610138565b6100956100f23660046102a9565b610145565b6100956101053660046102c2565b610152565b6101126101e7565b600155565b61011f6101e7565b600355565b61012c6101e7565b6101366000610241565b565b6101406101e7565b600255565b61014d6101e7565b600455565b61015a6101e7565b6001600160a01b0381166101db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101e481610241565b50565b6000546001600160a01b031633146101365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d2565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102bb57600080fd5b5035919050565b6000602082840312156102d457600080fd5b81356001600160a01b03811681146102eb57600080fd5b939250505056fea2646970667358221220eb7a3622cc81d5834d061e59fbd934d6db64113b6e054f316210d48fcb9ab1d564736f6c63430008120033";

type TodoPriceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoPriceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoPrice__factory extends ContractFactory {
  constructor(...args: TodoPriceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TodoPrice> {
    return super.deploy(overrides || {}) as Promise<TodoPrice>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TodoPrice {
    return super.attach(address) as TodoPrice;
  }
  override connect(signer: Signer): TodoPrice__factory {
    return super.connect(signer) as TodoPrice__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoPriceInterface {
    return new utils.Interface(_abi) as TodoPriceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TodoPrice {
    return new Contract(address, _abi, signerOrProvider) as TodoPrice;
  }
}
