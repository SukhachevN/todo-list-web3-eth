/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "TodoAchievements",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoAchievements__factory>;
    getContractFactory(
      name: "TodoAiImage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoAiImage__factory>;
    getContractFactory(
      name: "TodoList",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoList__factory>;
    getContractFactory(
      name: "TodoListBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoListBase__factory>;
    getContractFactory(
      name: "TodoListNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoListNFT__factory>;
    getContractFactory(
      name: "TodoNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoNFT__factory>;
    getContractFactory(
      name: "TodoPrice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoPrice__factory>;
    getContractFactory(
      name: "TodoToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TodoToken__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "TodoAchievements",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoAchievements>;
    getContractAt(
      name: "TodoAiImage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoAiImage>;
    getContractAt(
      name: "TodoList",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoList>;
    getContractAt(
      name: "TodoListBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoListBase>;
    getContractAt(
      name: "TodoListNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoListNFT>;
    getContractAt(
      name: "TodoNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoNFT>;
    getContractAt(
      name: "TodoPrice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoPrice>;
    getContractAt(
      name: "TodoToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TodoToken>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
