/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TodoAiImage,
  TodoAiImageInterface,
} from "../../contracts/TodoAiImage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "image",
        type: "string",
      },
    ],
    name: "NewAiImageNFT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_todoId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_deadline",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_createDate",
        type: "uint32",
      },
    ],
    name: "NewTodo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyAiImageTry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "deadline",
            type: "uint32",
          },
        ],
        internalType: "struct TodoListBase.CreateTodo",
        name: "_todo",
        type: "tuple",
      },
    ],
    name: "createTodo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "deleteTodo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAiImageState",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "tryCount",
            type: "uint256",
          },
        ],
        internalType: "struct TodoAiImage.AiImageState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSavedAiImage",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
        ],
        internalType: "struct TodoAiImage.SavedAiImage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "created",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "completed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deleted",
            type: "uint256",
          },
        ],
        internalType: "struct TodoListBase.Stats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTodos",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "deadline",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "createDate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "completeDate",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isCompleted",
            type: "bool",
          },
        ],
        internalType: "struct TodoListBase.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeAiImageState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct TodoAiImage.SaveAiImageArgs",
        name: "_args",
        type: "tuple",
      },
    ],
    name: "mintAiImageNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct TodoAiImage.SaveAiImageArgs",
        name: "_args",
        type: "tuple",
      },
    ],
    name: "saveAiImage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setAiImageTryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "setCompleteTodoReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "setCreateTodoReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setMintAiImageNFTPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "todoNFTAddress",
        type: "address",
      },
    ],
    name: "setTodoNFTContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "deadline",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isCompleted",
            type: "bool",
          },
        ],
        internalType: "struct TodoListBase.UpdateTodo",
        name: "_todo",
        type: "tuple",
      },
    ],
    name: "updateTodo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "useAiImageTry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052603260065560646007556103e86008556101f46009553480156200002757600080fd5b50604080518082018252600480825263544f444f60e01b602080840182905284518086019095529184529083015290600362000064838262000191565b50600462000073828262000191565b505050620000906200008a6200009660201b60201c565b6200009a565b6200025d565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011757607f821691505b6020821081036200013857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018c57600081815260208120601f850160051c81016020861015620001675750805b601f850160051c820191505b81811015620001885782815560010162000173565b5050505b505050565b81516001600160401b03811115620001ad57620001ad620000ec565b620001c581620001be845462000102565b846200013e565b602080601f831160018114620001fd5760008415620001e45750858301515b600019600386901b1c1916600185901b17855562000188565b600085815260208120601f198616915b828110156200022e578886015182559484019460019091019084016200020d565b50858210156200024d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61259f806200026d6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636e3c67381161010f578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e14610458578063ea67419e14610491578063f2fde38b14610499578063f42841c4146104ac57600080fd5b8063a9059cbb146103f3578063c33926cb14610406578063c59d48471461041b578063dd02bfbd1461044557600080fd5b806395d89b41116100de57806395d89b41146103755780639f1098d31461037d578063a457c2d7146103cd578063a78748c1146103e057600080fd5b80636e3c67381461031657806370a0823114610329578063715018a6146103525780638da5cb5b1461035a57600080fd5b8063232877bf11610187578063395093511161015657806339509351146102ca5780633bf2a529146102dd5780634f085daf146102f05780636685b99a1461030357600080fd5b8063232877bf1461028257806323b872dd146102955780632b23482e146102a8578063313ce567146102bb57600080fd5b8063101be4f3116101c3578063101be4f31461023557806315ae15e51461024857806317ecb2f71461025d57806318160ddd1461027057600080fd5b806303dc322d146101ea57806306fdde03146101f4578063095ea7b314610212575b600080fd5b6101f26104bf565b005b6101fc610592565b6040516102099190611d4f565b60405180910390f35b610225610220366004611d85565b610624565b6040519015158152602001610209565b6101f2610243366004611eb2565b61063e565b6102506108cb565b6040516102099190611f54565b6101f261026b366004611fc3565b610ad4565b6002545b604051908152602001610209565b6101f2610290366004612078565b610c7a565b6102256102a3366004612093565b610cb1565b6101f26102b63660046120cf565b610cd5565b60405160008152602001610209565b6102256102d8366004611d85565b610dd2565b6101f26102eb3660046120cf565b610e11565b6101f26102fe3660046120e8565b610e1e565b6101f26103113660046120cf565b610fb2565b6101f26103243660046120cf565b610fbf565b610274610337366004612078565b6001600160a01b031660009081526020819052604090205490565b6101f26110cc565b6005546040516001600160a01b039091168152602001610209565b6101fc6110e0565b60408051808201825260008082526020918201819052338152600e825282902082518084018452815460ff1615158082526001909201549083019081528351918252519181019190915201610209565b6102256103db366004611d85565b6110ef565b6101f26103ee3660046120cf565b611199565b610225610401366004611d85565b6111a6565b61040e6111b4565b60405161020991906121b7565b61042361147e565b6040805182518152602080840151908201529181015190820152606001610209565b6101f26104533660046120cf565b6114dc565b610274610466366004612282565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101f26114e9565b6101f26104a7366004612078565b611563565b6101f26104ba366004611fc3565b6115f3565b336000908152600c6020908152604091829020825160608101845281548082526001830154938201939093526002909101549281019290925261056f5760405162461bcd60e51b815260206004820152602d60248201527f4e65656420637265617465206174206c65617374206f6e6520746f646f20746f60448201527f206765742066726565207472790000000000000000000000000000000000000060648201526084015b60405180910390fd5b50336000908152600e60205260409020805460ff19166001908117825590810155565b6060600380546105a1906122b5565b80601f01602080910402602001604051908101604052809291908181526020018280546105cd906122b5565b801561061a5780601f106105ef5761010080835404028352916020019161061a565b820191906000526020600020905b8154815290600101906020018083116105fd57829003601f168201915b5050505050905090565b60003361063281858561163f565b60019150505b92915050565b8051516106b35760405162461bcd60e51b815260206004820152602160248201527f43616e742063726561746520746f646f207769746820656d707479207469746c60448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610566565b6040805160e081018252600a805480835284516020808501918252860151848601529385015163ffffffff9081166060850152429081166080850152600060a0850181905260c0850181905260018301845592909252825160049091027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a881019182559351919390917fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a99091019061076b908261233d565b5060408201516002820190610780908261233d565b50606082015160039091018054608084015160a085015160c09095015115156c01000000000000000000000000026cff0000000000000000000000001963ffffffff9687166801000000000000000002166cffffffffff0000000000000000199287166401000000000267ffffffffffffffff199094169690951695909517919091171691909117919091179055600a5460009061082090600190612413565b336000908152600c6020526040812080549293509061083e83612426565b90915550506000818152600b60205260409020805473ffffffffffffffffffffffffffffffffffffffff19163390811790915560065461087e9190611797565b82516020840151604080860151905133937f4dccddf753536f5dd6a0aefd0940aafd337d2f1d97b67f7d0177316659f96848936108be938793899061243f565b60405180910390a2505050565b6108f66040518060800160405280606081526020016060815260200160608152602001600081525090565b336000908152600f60205260409081902081516080810190925280548290829061091f906122b5565b80601f016020809104026020016040519081016040528092919081815260200182805461094b906122b5565b80156109985780601f1061096d57610100808354040283529160200191610998565b820191906000526020600020905b81548152906001019060200180831161097b57829003601f168201915b505050505081526020016001820180546109b1906122b5565b80601f01602080910402602001604051908101604052809291908181526020018280546109dd906122b5565b8015610a2a5780601f106109ff57610100808354040283529160200191610a2a565b820191906000526020600020905b815481529060010190602001808311610a0d57829003601f168201915b50505050508152602001600282018054610a43906122b5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6f906122b5565b8015610abc5780601f10610a9157610100808354040283529160200191610abc565b820191906000526020600020905b815481529060010190602001808311610a9f57829003601f168201915b50505050508152602001600382015481525050905090565b33600090815260208190526040902054600954811015610b365760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f6b656e7320746f206d696e74204e46540000006044820152606401610566565b610b42336009546117a5565b600d548251602084015160408086015190517f7791d3f30000000000000000000000000000000000000000000000000000000081526000946001600160a01b031693637791d3f393610b9893339360040161248d565b6020604051808303816000875af1158015610bb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdb91906124e0565b336000908152600f602052604090208451919250908190610bfc908261233d565b5060208401516001820190610c11908261233d565b5060408401516002820190610c26908261233d565b506003810182905583516020850151604080870151905133937f6822a255d0703fcd35ee8aa19f82828c127af720896444e42b187730cc50f91893610c6c9388936124f9565b60405180910390a250505050565b610c8261190e565b600d805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600033610cbf858285611968565b610cca8585856119f4565b506001949350505050565b60008111610d255760405162461bcd60e51b815260206004820152601360248201527f43616e7420627579207a65726f207472696573000000000000000000000000006044820152606401610566565b600060085482610d359190612512565b3360009081526020819052604090205490915081811015610d985760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f75676820746f6b656e7320746f2062757920747269657300006044820152606401610566565b336000908152600e6020526040812060018101805491928692610dbc908490612529565b90915550610dcc90503384611be1565b50505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906106329082908690610e0c908790612529565b61163f565b610e1961190e565b600655565b805163ffffffff166000818152600b60205260409020546001600160a01b03163314610e8c5760405162461bcd60e51b815260206004820152601060248201527f546f646f206f776e6572206572726f72000000000000000000000000000000006044820152606401610566565b6000600a836000015163ffffffff1681548110610eab57610eab61253c565b90600052602060002090600402019050826080015115610f3d57600381015468010000000000000000900463ffffffff16600003610f1257336000908152600c60205260408120600101805491610f0183612426565b9190505550610f1233600754611797565b6003810180546bffffffff00000000000000001916680100000000000000004263ffffffff16021790555b60208301516001820190610f51908261233d565b5060408301516002820190610f66908261233d565b5060608301516003909101805460809094015115156c01000000000000000000000000026cff0000000000000000ffffffff1990941663ffffffff909216919091179290921790915550565b610fba61190e565b600855565b6000818152600b602052604090205481906001600160a01b031633146110275760405162461bcd60e51b815260206004820152601060248201527f546f646f206f776e6572206572726f72000000000000000000000000000000006044820152606401610566565b61107e33600a848154811061103e5761103e61253c565b9060005260206000209060040201600301600c9054906101000a900460ff1661106957600654611be1565b6007546006546110799190612529565b611be1565b6000828152600b60209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19169055338352600c90915281206002018054916110c383612426565b91905055505050565b6110d461190e565b6110de6000611beb565b565b6060600480546105a1906122b5565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561118c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610566565b610cca828686840361163f565b6111a161190e565b600755565b6000336106328185856119f4565b336000908152600c6020526040812060028101549054606092916111d791612413565b905060008167ffffffffffffffff8111156111f4576111f4611daf565b60405190808252806020026020018201604052801561125b57816020015b6040805160e08101825260008082526060602080840182905293830181905282018190526080820181905260a0820181905260c082015282526000199092019101816112125790505b5090506000805b600a54811015611475576000818152600b6020526040902054336001600160a01b039091160361146357600a818154811061129f5761129f61253c565b90600052602060002090600402016040518060e0016040529081600082015481526020016001820180546112d2906122b5565b80601f01602080910402602001604051908101604052809291908181526020018280546112fe906122b5565b801561134b5780601f106113205761010080835404028352916020019161134b565b820191906000526020600020905b81548152906001019060200180831161132e57829003601f168201915b50505050508152602001600282018054611364906122b5565b80601f0160208091040260200160405190810160405280929190818152602001828054611390906122b5565b80156113dd5780601f106113b2576101008083540402835291602001916113dd565b820191906000526020600020905b8154815290600101906020018083116113c057829003601f168201915b50505091835250506003919091015463ffffffff80821660208401526401000000008204811660408401526801000000000000000082041660608301526c01000000000000000000000000900460ff16151560809091015283518490849081106114495761144961253c565b6020026020010181905250818061145f90612426565b9250505b8061146d81612426565b915050611262565b50909392505050565b6114a260405180606001604052806000815260200160008152602001600081525090565b50336000908152600c6020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b6114e461190e565b600955565b336000908152600e6020526040902060018101546115495760405162461bcd60e51b815260206004820152601360248201527f446f6e74206861766520616e79207472696573000000000000000000000000006044820152606401610566565b60018101805490600061155b83612552565b919050555050565b61156b61190e565b6001600160a01b0381166115e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610566565b6115f081611beb565b50565b336000908152600f6020526040902081518190611610908261233d565b5060208201516001820190611625908261233d565b506040820151600282019061163a908261233d565b505050565b6001600160a01b0383166116ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610566565b6001600160a01b0382166117365760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610566565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6117a18282611c4a565b5050565b6001600160a01b0382166118215760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610566565b6001600160a01b038216600090815260208190526040902054818110156118b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610566565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6005546001600160a01b031633146110de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610566565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610dcc57818110156119e75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610566565b610dcc848484840361163f565b6001600160a01b038316611a705760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610566565b6001600160a01b038216611aec5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610566565b6001600160a01b03831660009081526020819052604090205481811015611b7b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610566565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610dcc565b6117a182826117a5565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216611ca05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610566565b8060026000828254611cb29190612529565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b81811015611d2f57602081850181015186830182015201611d13565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611d626020830184611d09565b9392505050565b80356001600160a01b0381168114611d8057600080fd5b919050565b60008060408385031215611d9857600080fd5b611da183611d69565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611de857611de8611daf565b60405290565b60405160a0810167ffffffffffffffff81118282101715611de857611de8611daf565b600082601f830112611e2257600080fd5b813567ffffffffffffffff80821115611e3d57611e3d611daf565b604051601f8301601f19908116603f01168101908282118183101715611e6557611e65611daf565b81604052838152866020858801011115611e7e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803563ffffffff81168114611d8057600080fd5b600060208284031215611ec457600080fd5b813567ffffffffffffffff80821115611edc57600080fd5b9083019060608286031215611ef057600080fd5b611ef8611dc5565b823582811115611f0757600080fd5b611f1387828601611e11565b825250602083013582811115611f2857600080fd5b611f3487828601611e11565b602083015250611f4660408401611e9e565b604082015295945050505050565b602081526000825160806020840152611f7060a0840182611d09565b90506020840151601f1980858403016040860152611f8e8383611d09565b9250604086015191508085840301606086015250611fac8282611d09565b915050606084015160808401528091505092915050565b600060208284031215611fd557600080fd5b813567ffffffffffffffff80821115611fed57600080fd5b908301906060828603121561200157600080fd5b612009611dc5565b82358281111561201857600080fd5b61202487828601611e11565b82525060208301358281111561203957600080fd5b61204587828601611e11565b60208301525060408301358281111561205d57600080fd5b61206987828601611e11565b60408301525095945050505050565b60006020828403121561208a57600080fd5b611d6282611d69565b6000806000606084860312156120a857600080fd5b6120b184611d69565b92506120bf60208501611d69565b9150604084013590509250925092565b6000602082840312156120e157600080fd5b5035919050565b6000602082840312156120fa57600080fd5b813567ffffffffffffffff8082111561211257600080fd5b9083019060a0828603121561212657600080fd5b61212e611dee565b61213783611e9e565b815260208301358281111561214b57600080fd5b61215787828601611e11565b60208301525060408301358281111561216f57600080fd5b61217b87828601611e11565b60408301525061218d60608401611e9e565b60608201526080830135925082151583146121a757600080fd5b6080810192909252509392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561227457603f19898403018552815160e08151855288820151818a87015261220c82870182611d09565b91505087820151858203898701526122248282611d09565b60608481015163ffffffff9081169189019190915260808086015182169089015260a0808601519091169088015260c09384015115159390960192909252505093860193908601906001016121de565b509098975050505050505050565b6000806040838503121561229557600080fd5b61229e83611d69565b91506122ac60208401611d69565b90509250929050565b600181811c908216806122c957607f821691505b6020821081036122e957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561163a57600081815260208120601f850160051c810160208610156123165750805b601f850160051c820191505b8181101561233557828155600101612322565b505050505050565b815167ffffffffffffffff81111561235757612357611daf565b61236b8161236584546122b5565b846122ef565b602080601f8311600181146123a057600084156123885750858301515b600019600386901b1c1916600185901b178555612335565b600085815260208120601f198616915b828110156123cf578886015182559484019460019091019084016123b0565b50858210156123ed5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115610638576106386123fd565b600060018201612438576124386123fd565b5060010190565b85815260a06020820152600061245860a0830187611d09565b828103604084015261246a8187611d09565b91505063ffffffff80851660608401528084166080840152509695505050505050565b6001600160a01b03851681526080602082015260006124af6080830186611d09565b82810360408401526124c18186611d09565b905082810360608401526124d58185611d09565b979650505050505050565b6000602082840312156124f257600080fd5b5051919050565b8481526080602082015260006124af6080830186611d09565b8082028115828204841417610638576106386123fd565b80820180821115610638576106386123fd565b634e487b7160e01b600052603260045260246000fd5b600081612561576125616123fd565b50600019019056fea2646970667358221220f57a0dd8615048a19a09c4846931cf82fc8c2c160107fdae2f85b81ac2184d9464736f6c63430008120033";

type TodoAiImageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoAiImageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoAiImage__factory extends ContractFactory {
  constructor(...args: TodoAiImageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TodoAiImage> {
    return super.deploy(overrides || {}) as Promise<TodoAiImage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TodoAiImage {
    return super.attach(address) as TodoAiImage;
  }
  override connect(signer: Signer): TodoAiImage__factory {
    return super.connect(signer) as TodoAiImage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoAiImageInterface {
    return new utils.Interface(_abi) as TodoAiImageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TodoAiImage {
    return new Contract(address, _abi, signerOrProvider) as TodoAiImage;
  }
}
